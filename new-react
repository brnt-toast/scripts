#!/usr/bin/bash

npm init -y
npm pkg set scripts.dev="npx parcel src/index.pug"

npm i -D parcel tailwindcss postcss autoprefixer
npm i pug react react-dom 

# creation of tailwind.config.js
npx tailwindcss init

# create src folder for the boilerplate
mkdir src

# Create config files
touch .postcssrc .parcelrc .gitignore 

# Create source files
touch src/index.pug src/main.css src/index.js src/App.js


# Add files to .gitignore
printf "\
node_modules/
dist/
.*-cache
" > .gitignore 

# SVG support
printf "\
{
  \"extends\": \"@parcel/config-default\",
  \"transformers\": {
    \"*.svg\": [\"...\", \"@parcel/transformer-svg-react\"]
  }
}
" > .parcelrc

# Enable TailwindCSS JIT mode
printf "\
{
  \"plugins\": {
    \"tailwindcss\": {}
  }
}
" > .postcssrc

# TailwindCSS config to support .pug files
printf "\
module.exports = {
  content: [
  	\"./src/**/*.{html,pug,js,jsx}\"
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
" > tailwind.config.js

# Append Tailwind to CSS file
printf "\
@tailwind base;
@tailwind components;
@tailwind utilities;

* {
    background-color: rgba(0, 0, 255, 0.12);
}
" > src/main.css

# Boilerplate src/index.pug file for react
printf "\
doctype html
html(lang=\"en\")
  head
    link(rel=\"stylesheet\", href=\"./main.css\")
  body
    #app
    script(type=\"module\", src=\"./index.js\")
" > src/index.pug

# React 18 src/index.js
printf "\
import React from \"react\";
import { createRoot } from \"react-dom/client\";
import App from \"./App\";

const rootElement = document.getElementById(\"app\");
const root = createRoot(rootElement);
root.render(
    <App />
);
" > src/index.js

# Hello-world sanity check
printf "\
export default App = () => {
    return (
       <div className=\"App\">
            <h1>hello world from src/App.js</h1>
       </div>
    )
}
" > src/App.js
